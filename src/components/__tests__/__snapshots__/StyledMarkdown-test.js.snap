// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  style={
    Array [
      Object {
        "flex": 1,
        "overflow": "hidden",
      },
      undefined,
    ]
  }
>
  <RNCWebView
    automaticallyAdjustContentInsets={true}
    cacheEnabled={true}
    domStorageEnabled={true}
    javaScriptEnabled={true}
    messagingEnabled={false}
    onContentProcessDidTerminate={[Function]}
    onHttpError={[Function]}
    onLoadingError={[Function]}
    onLoadingFinish={[Function]}
    onLoadingProgress={[Function]}
    onLoadingStart={[Function]}
    onMessage={[Function]}
    onNavigationStateChange={[Function]}
    onShouldStartLoadWithRequest={[Function]}
    scalesPageToFit={true}
    source={
      Object {
        "baseUrl": "about:blank",
        "html": "<!DOCTYPE html>
<html>
    <head>
        <meta charset=\\"utf-8\\">
        <meta http-equiv=\\"X-UA-Compatible\\" content=\\"IE=edge\\">
        <meta name=\\"viewport\\" content=\\"initial-scale=1, maximum-scale=1\\">
        <meta name=\\"format-detection\\" content=\\"telephone=no\\">
        <meta name=\\"format-detection\\" content=\\"date=no\\">
        <meta name=\\"format-detection\\" content=\\"address=no\\">
        <meta name=\\"format-detection\\" content=\\"email=no\\">

        <title></title>


        <style type=\\"text/css\\">
            body, html, #height-wrapper {
                margin: 0;
                padding: 0;
            }
            #height-wrapper {
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
            }
            body {
                font-family: \\"Open Sans\\", \\"Gill Sans\\", Arial, sans-serif;
            }
            b, strong {
                font-family: \\"Open Sans\\", \\"Gill Sans\\", Arial, sans-serif;
                font-weight: bold;
            }
            h1, h2, h3, h4, h5, h6 {
                margin-top: 10px;
                font-family: \\"Open Sans\\", \\"Gill Sans\\", Arial, sans-serif;
                font-weight: 500;
            }
            img {
              height: auto;
              width: auto;
              max-width: 300px;
              max-height: 300px;
            }
            p {
              margin: 0;
            }
            
        </style>
    </head>
    <body>
        <p>What?</p>


    <script>

    ;(function() {
    var wrapper = document.createElement(\\"div\\");
    wrapper.id = \\"height-wrapper\\";
    while (document.body.firstChild) {
        wrapper.appendChild(document.body.firstChild);
    }
    document.body.appendChild(wrapper);
    var i = 0;
    function updateHeight() {
        document.title = wrapper.clientHeight;
        window.location.hash = ++i;
    }
    updateHeight();
    window.addEventListener(\\"load\\", function() {
        updateHeight();
        setTimeout(updateHeight, 1000);
    });
    window.addEventListener(\\"resize\\", updateHeight);
    }());

    </script>
    </body>
</html>",
      }
    }
    style={
      Array [
        Object {
          "flex": 1,
          "overflow": "hidden",
        },
        Object {
          "backgroundColor": "#ffffff",
        },
        Array [
          undefined,
          Object {
            "height": 0,
            "width": 710,
          },
        ],
      ]
    }
    useSharedProcessPool={true}
  />
</View>
`;

exports[`renders extraCSS 1`] = `
<View
  style={
    Array [
      Object {
        "flex": 1,
        "overflow": "hidden",
      },
      undefined,
    ]
  }
>
  <RNCWebView
    automaticallyAdjustContentInsets={true}
    cacheEnabled={true}
    domStorageEnabled={true}
    javaScriptEnabled={true}
    messagingEnabled={false}
    onContentProcessDidTerminate={[Function]}
    onHttpError={[Function]}
    onLoadingError={[Function]}
    onLoadingFinish={[Function]}
    onLoadingProgress={[Function]}
    onLoadingStart={[Function]}
    onMessage={[Function]}
    onNavigationStateChange={[Function]}
    onShouldStartLoadWithRequest={[Function]}
    scalesPageToFit={true}
    source={
      Object {
        "baseUrl": "about:blank",
        "html": "<!DOCTYPE html>
<html>
    <head>
        <meta charset=\\"utf-8\\">
        <meta http-equiv=\\"X-UA-Compatible\\" content=\\"IE=edge\\">
        <meta name=\\"viewport\\" content=\\"initial-scale=1, maximum-scale=1\\">
        <meta name=\\"format-detection\\" content=\\"telephone=no\\">
        <meta name=\\"format-detection\\" content=\\"date=no\\">
        <meta name=\\"format-detection\\" content=\\"address=no\\">
        <meta name=\\"format-detection\\" content=\\"email=no\\">

        <title></title>


        <style type=\\"text/css\\">
            body, html, #height-wrapper {
                margin: 0;
                padding: 0;
            }
            #height-wrapper {
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
            }
            body {
                font-family: \\"Open Sans\\", \\"Gill Sans\\", Arial, sans-serif;
            }
            b, strong {
                font-family: \\"Open Sans\\", \\"Gill Sans\\", Arial, sans-serif;
                font-weight: bold;
            }
            h1, h2, h3, h4, h5, h6 {
                margin-top: 10px;
                font-family: \\"Open Sans\\", \\"Gill Sans\\", Arial, sans-serif;
                font-weight: 500;
            }
            img {
              height: auto;
              width: auto;
              max-width: 300px;
              max-height: 300px;
            }
            p {
              margin: 0;
            }
            font-size: 30;
        </style>
    </head>
    <body>
        <p>who?</p>


    <script>

    ;(function() {
    var wrapper = document.createElement(\\"div\\");
    wrapper.id = \\"height-wrapper\\";
    while (document.body.firstChild) {
        wrapper.appendChild(document.body.firstChild);
    }
    document.body.appendChild(wrapper);
    var i = 0;
    function updateHeight() {
        document.title = wrapper.clientHeight;
        window.location.hash = ++i;
    }
    updateHeight();
    window.addEventListener(\\"load\\", function() {
        updateHeight();
        setTimeout(updateHeight, 1000);
    });
    window.addEventListener(\\"resize\\", updateHeight);
    }());

    </script>
    </body>
</html>",
      }
    }
    style={
      Array [
        Object {
          "flex": 1,
          "overflow": "hidden",
        },
        Object {
          "backgroundColor": "#ffffff",
        },
        Array [
          undefined,
          Object {
            "height": 0,
            "width": 710,
          },
        ],
      ]
    }
    useSharedProcessPool={true}
  />
</View>
`;
